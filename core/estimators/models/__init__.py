from .custom_resnet import *
from .omar_cnn import OmarCNN

zoo = {

    'omar': lambda: OmarCNN(),
    'resnet18-se': lambda: resnet18(1, blocks=[BasicBlockSE, BasicBlockSE, BasicBlockSE, BasicBlockSE]),
    'resnet18': lambda: resnet18(1),
    'microresnet#3-gate=3x3-n=1-se=True': lambda: MicroResnet.micro3(1,
                                                                     n=1,
                                                                     encoder=Encoder3x3,
                                                                     blocks=[BasicBlockSE, BasicBlockSE,
                                                                             BasicBlockSE, BasicBlockSE],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),
    'microresnet#2-gate=3x3-n=2-se=False': lambda: MicroResnet.micro2(1,
                                                                      n=2,
                                                                      encoder=Encoder3x3,
                                                                      blocks=[BasicBlock, BasicBlock,
                                                                              BasicBlock],
                                                                      preactivate=True,
                                                                      activation='leaky_relu'),
    'microresnet#4-gate=3x3-n=1-se=False': lambda: MicroResnet.micro(1,
                                                                     n=1,
                                                                     encoder=Encoder3x3,
                                                                     blocks=[BasicBlock, BasicBlock,
                                                                             BasicBlock],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),
    'microresnet#5-gate=5x5-n=1-se=True': lambda: MicroResnet.micro5(1,
                                                                     n=1,
                                                                     encoder=Encoder5x5,
                                                                     blocks=[BasicBlockSE, BasicBlockSE],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),
    'microresnet#4-gate=3x3-n=2-se=False': lambda: MicroResnet.micro(1,
                                                                     n=2,
                                                                     encoder=Encoder3x3,
                                                                     blocks=[BasicBlock, BasicBlock, BasicBlock
                                                                             ],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),
    'microresnet#4-gate=3x3-n=2-se=True': lambda: MicroResnet.micro(1,
                                                                    n=2,
                                                                    encoder=Encoder3x3,
                                                                    blocks=[BasicBlockSE, BasicBlockSE,
                                                                            BasicBlockSE],
                                                                    preactivate=True,
                                                                    activation='leaky_relu'),
    'microresnet#4-gate=3x3-n=1-se=True': lambda: MicroResnet.micro(1,
                                                                    n=1,
                                                                    encoder=Encoder3x3,
                                                                    blocks=[BasicBlockSE, BasicBlockSE,
                                                                            BasicBlockSE],
                                                                    preactivate=True,
                                                                    activation='leaky_relu'),
    'microresnet#4-gate=3x3-n=5-se=False': lambda: MicroResnet.micro(1,
                                                                     n=5,
                                                                     encoder=Encoder3x3,
                                                                     blocks=[BasicBlock, BasicBlock, BasicBlock,
                                                                             ],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),
    'microresnet#4-gate=7x7-n=2-se=True': lambda: MicroResnet.micro(1,
                                                                    n=2,
                                                                    encoder=Encoder7x7,
                                                                    blocks=[BasicBlock, BasicBlock, BasicBlock,
                                                                            BasicBlockSE],
                                                                    preactivate=True,
                                                                    activation='leaky_relu'),
    'microresnet#4-gate=7x7-n=1-se=True': lambda: MicroResnet.micro(1,
                                                                    n=1,
                                                                    encoder=Encoder7x7,
                                                                    blocks=[BasicBlock, BasicBlock, BasicBlock,
                                                                            BasicBlockSE],
                                                                    preactivate=True,
                                                                    activation='leaky_relu'),
    'microresnet#4-gate=5x5-n=2-se=False': lambda: MicroResnet.micro(1,
                                                                     n=2,
                                                                     encoder=Encoder5x5,
                                                                     blocks=[BasicBlock, BasicBlock, BasicBlock],
                                                                     preactivate=True,
                                                                     activation='leaky_relu'),

    'micro2resnet#4-gate=3x3-n=2-se=True': lambda: MicroResnet.micro2(1,
                                                                      n=2,
                                                                      encoder=Encoder3x3,
                                                                      blocks=[BasicBlock, BasicBlock, BasicBlock,
                                                                              BasicBlockSE],
                                                                      preactivate=True,
                                                                      activation='leaky_relu'),
    'microresnet#3-gate=7x7-n=1-se=True':  lambda: ResNet(
        in_channel=1,
        encoder=Encoder7x7,
        # decoder=MyDecoder,
        depths=[1, 1, 1],
        blocks=[BasicBlockSE, BasicBlockSE, BasicBlockSE],
        blocks_sizes=[(16, 32), (32, 64), (64, 128)],
        n_classes=2,
        activation='leaky_relu',
        preactivate=True,
        ratio=4,
    )



}


